* Тестирование ПО(МДК 01.02)
  :PROPERTIES:
  :CUSTOM_ID: тестирование-помдк-01.02
  :END:
** Тестирование как часть процесса верификации ПО
   :PROPERTIES:
   :CUSTOM_ID: тестирование-как-часть-процесса-верификации-по
   :END:
Верификация - это процесс оценки системы или её компонентов на предмет
удовлетворения ГОСТу.

Основная цель верификации - проверить, что ПО соответствует требованиям.

Дополнительная цель - выявление недочетов

Верификация - неотъемлемая часть работ при коллективной разработке
программных систем.

Контроль результатов одних разработчиков при передаче их в качестве
исходных данных другими разработчикам.

Верификация и отладка - оба процесса, направлены на уменьшение ошибок в
конечном ПП

Отладка - процесс, направленный на локализацию и устранение ошибок в
системе

Верификация - процесс, направленный на демонстрацию наличия ошибок

Верификация в отличие от отладки - контролируемый и управляемый процесс.

** Программные ошибки. Виды ошибок.
   :PROPERTIES:
   :CUSTOM_ID: программные-ошибки.-виды-ошибок.
   :END:
Программная ошибка - ошибка в программе или в системе, из-за которой
программа выдаёт неожиданное поведение и, как следствие, результат.
Проявляются во время исполнения.

*** Значение и классификация ошибок в программном обеспечении.
    :PROPERTIES:
    :CUSTOM_ID: значение-и-классификация-ошибок-в-программном-обеспечении.
    :END:
- Синтаксические ошибки(распознаваемые транслятором и делающие
  компиляцию невозможной) - например, отсутствие или несоответствие
  открывающей и закрывающей скобок.
- Предупреждения(warnings) компилятора - например использование
  неинициализированной переменной. В этом случае компилятор может
  заметить, что-то необычное(вероятно, неверное), и сообщает об этом
- ошибки времени исполнения - например вычитание переменных вместо
  сложения или ошибка сегментации

*По важности*:

- Критические - лишающие программу сей полезности
- Серьёзные
- Незначительные
- Косметические

*По времени появления:*

- Постоянно, при каждом запуске
- Иногда (плавающий тип)
- Только на машине у клиента(зависит от локальных настроек у клиента)

*По месту и направлению:*

- Ошибки пользовательского интерфейса
- Системы обработки ошибок
- Ошибки, связанные с граничными условиями(например, некорректная
  обработка пустой строки или максимального числового значения)
- Ошибки вычислений
- Ошибки обработки или интерпретации данных
- Ошибки контроля версии и индефикаторов
- Ошибки тестирования

В зависимости от характера, программы и среды исполнения, ошибка может
появляться сразу или наоборот - долгое время оставаться незамеченной

Также ошибка может быть в уязвимости доступа к потоку.(безопасность)

Разновидности:

- Борбаг - легко обнаруживаемая стабильная ошибка
- Гейзенбаг - сложно обнаруживаемая, периодически исчезающая и меняющая
  свойства при попытке обнаружения, ошибка

Дефект - изъян в компоненте или в системе который может привести
компонент или систему к невозможности выполнить требуемую функцию.

Дефект, обнаруженный во время выполнения, может привести к отказам
компонента или системы.

*** Как определить дефект перед нами или нет?
    :PROPERTIES:
    :CUSTOM_ID: как-определить-дефект-перед-нами-или-нет
    :END:
1. Программа не делает чего-то, что она должна делать согласно тех.
   требованиям
2. Программа делает что-то, чего она не должна делать согласно тех.
   требованиям
3. Программа делает что-то, о чем в требованиях не упоминалось.
4. Программа не делает чего-то, о чем не говорится в требованиях, однако
   подразумевается, что она должна делать это
5. Программа трудна для понимания, неудобна в использовании

Люди ошибаются

Если кто-то допустит ошибку в архитектуре или коде программы, то это
программа будет содержать дефект. При исполнении программы любой дефект
может привести к отказу

Ошибка --> Дефект --> Отказ

Отчёт о дефекте - документ содержащий отчёт о любом недостатке в
компоненте или в системе, который может привести компонент или систему,
к невозможности выполнить требуемую функцию.
Хороший отчёт - хорошая репутация?

Содержание отчёта:

1. Индефикатор. Уникальный ID, присваемый отчету о дефекте, который
   может быть использован при его поиске и упоминанию о нем.
2. Краткое описание.
3. Подробное описание
4. Влияние. Критичность и серьёзность дефекта.

Краткое описание должно включать в себя:

- краткое, но конкретное описание, которое даст читателю представление о
  характере проблемы
- краткое описание границ и зависимостей дефекта
- краткое описание влияния или последствий данного дефекта

Уровни критичности:

1. Полный отказ системы, потеря данных, повреждённые данные, бреши в
   защите
2. Операционная ошибка, неверный результат, потеря функциональности
3. Небольшие проблемы, орфографические ошибки, разметка
   пользовательского интерфейса, редкие

Приоритеты:

1. Ошибки, которые требует немедленного устранения, делает невозможным
   дальнейшее тестирование
2. Должен быть устранен до релиза
3. Устранить когда будет время
4. Желательно устранить

По мере развития проекта приоритеты могут меняться.

Причины возникновения дефектов

- Комментарии
- Ошибка вычислений
- Ошибка данных
- Ошибка базы данных
- Упущения при проектировании

** Тестирование чёрным ящиком
   :PROPERTIES:
   :CUSTOM_ID: тестирование-чёрным-ящиком
   :END:
Тестирование проходит на основании спецификации или на основании Product
Backlog[^1].

Если нет требований, то их нужно создать на основе комуникаций с
заказчиком(звонки, встречи, письма) или же они должны быть написаны бизнес-аналиткком
или тест-дизайнером.

[^1] Бэклог - это список всех работ необходмых для реализации продукта.

Исчерпывающее тестирование(на всех наборах данных) невозможно.

Методы формирования тестовых наборов:

- эквивалетное разбиение - если тест какого-либо класса обнаруживает
  ошибку, то предпологается, что все другие тесты этого класса
  эквивалентности тоже обнаружат эту ошибку
  - выделение классов эквивалентности
  - построение тестов
- анализ граничных значений
- анализ причинно-следственных связей
- предположение об ошибке

При разработке тестов рассматриваются не только входные данные, но и
пространство результатов.

*** Анализ причинно-следственных связей
    :PROPERTIES:
    :CUSTOM_ID: анализ-причинно-следственных-связей
    :END:
Шаги для анализа: - разбиение на рабочие участки

В спецификации определяется множество причин и следствий

На основе анализа семанического содержания спецификации строится таблица
истинности, в которой последовательно перебираются все возможные
комбинации причин и определяются следствия для каждой комбинации причин.
Таблица снабжается примечаниями, задающими ограничения.
